exports.id=2941,exports.ids=[2941],exports.modules={24243:e=>{function t(e){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=24243,e.exports=t},93301:(e,t,s)=>{"use strict";s.d(t,{I8:()=>B,handlers:()=>x});var n=s(92493);let a=["/"],r=[...process.env.WITH_AUTH?["/cycle"]:[],"/profile","/documentation","/maintenance","/manage-cycle","/manage-account"],o=["/auth/signin","/auth/signup"];var i=s(43350),c=s(5113),l=s(60027),u=s(37061),d=s(64020),h=s(89693);let m=d.createPool({host:process.env.DRIZZLE_DATABASE_HOST,user:process.env.DRIZZLE_DATABASE_USER,password:process.env.DRIZZLE_DATABASE_PASSWORD,database:process.env.DRIZZLE_DATABASE_NAME}),p=(0,u.tS)(m,{logger:!0});var w=s(29148),f=s(75513),g=s(79184),k=s(78870),y=s(32692);let _=(0,w.iq)("tbl_fc_user",{id:(0,f.L7)("id",{length:255}).primaryKey().$defaultFn(()=>crypto.randomUUID()),name:(0,f.L7)("name",{length:255}),password:(0,f.L7)("password",{length:255}),email:(0,f.L7)("email",{length:255}).notNull(),emailVerified:(0,g.AB)("emailVerified",{mode:"date",fsp:3}),image:(0,f.L7)("image",{length:255})}),A=(0,w.iq)("tbl_fc_account",{userId:(0,f.L7)("userId",{length:255}).notNull().references(()=>_.id,{onDelete:"cascade"}),type:(0,f.L7)("type",{length:255}).$type().notNull(),provider:(0,f.L7)("provider",{length:255}).notNull(),providerAccountId:(0,f.L7)("providerAccountId",{length:255}).notNull(),refresh_token:(0,f.L7)("refresh_token",{length:255}),access_token:(0,f.L7)("access_token",{length:255}),expires_at:(0,k.e$)("expires_at"),token_type:(0,f.L7)("token_type",{length:255}),scope:(0,f.L7)("scope",{length:255}),id_token:(0,f.L7)("id_token",{length:2048}),session_state:(0,f.L7)("session_state",{length:255}),login_count:(0,k.e$)("login_count")},e=>({compoundKey:(0,y.CK)({columns:[e.provider,e.providerAccountId]})})),v=(0,w.iq)("tbl_fc_session",{sessionToken:(0,f.L7)("sessionToken",{length:255}).primaryKey(),userId:(0,f.L7)("userId",{length:255}).notNull().references(()=>_.id,{onDelete:"cascade"}),expires:(0,g.AB)("expires",{mode:"date"}).notNull()}),U=(0,w.iq)("tbl_fc_verificationToken",{identifier:(0,f.L7)("identifier",{length:255}).notNull(),token:(0,f.L7)("token",{length:255}).notNull(),expires:(0,g.AB)("expires",{mode:"date"}).notNull()},e=>({compoundKey:(0,y.CK)({columns:[e.identifier,e.token]})})),L=function(){let e=(0,l.J)(p);return e.createUser=async e=>{let t=crypto.randomUUID();return await p.insert(_).values({...e,id:t}),await p.select().from(_).where((0,h.eq)(_.id,t)).then(e=>e[0])},e.getUser=async e=>await p.select().from(_).where((0,h.eq)(_.id,e)).then(e=>e[0])??null,e.getUserByEmail=async e=>await p.select().from(_).where((0,h.eq)(_.email,e)).then(e=>e[0])??null,e.createSession=async e=>(await p.insert(v).values(e),await p.select().from(v).where((0,h.eq)(v.sessionToken,e.sessionToken)).then(e=>e[0])),e.getSessionAndUser=async e=>await p.select({session:v,user:_}).from(v).where((0,h.eq)(v.sessionToken,e)).innerJoin(_,(0,h.eq)(_.id,v.userId)).then(e=>e[0])??null,e.updateUser=async e=>{if(!e.id)throw Error("No user id.");return await p.update(_).set(e).where((0,h.eq)(_.id,e.id)),await p.select().from(_).where((0,h.eq)(_.id,e.id)).then(e=>e[0])},e.updateSession=async e=>(await p.update(v).set(e).where((0,h.eq)(v.sessionToken,e.sessionToken)),await p.select().from(v).where((0,h.eq)(v.sessionToken,e.sessionToken)).then(e=>e[0])),e.updateAccountLoginCount=async e=>{let t=await p.select().from(A).where((0,h.eq)(A.userId,e)).then(e=>e[0]??null);return t?(await p.update(A).set({login_count:t.login_count+1}).where((0,h.eq)(A.userId,e)),await p.select().from(A).where((0,h.eq)(A.userId,e)).then(e=>e[0])):null},e.linkAccount=async e=>{await p.insert(A).values(e)},e.getUserByAccount=async e=>{let t=await p.select().from(A).where((0,h.xD)((0,h.eq)(A.providerAccountId,e.providerAccountId),(0,h.eq)(A.provider,e.provider))).leftJoin(_,(0,h.eq)(A.userId,_.id)).then(e=>e[0])??null;return t?{...t.tbl_fc_user,login_count:t.tbl_fc_account.login_count}:null},e.deleteSession=async e=>{let t=await p.select().from(v).where((0,h.eq)(v.sessionToken,e)).then(e=>e[0])??null;return await p.delete(v).where((0,h.eq)(v.sessionToken,e)),t},e.createVerificationToken=async e=>(await p.insert(U).values(e),await p.select().from(U).where((0,h.eq)(U.identifier,e.identifier)).then(e=>e[0])),e.useVerificationToken=async e=>{try{let t=await p.select().from(U).where((0,h.xD)((0,h.eq)(U.identifier,e.identifier),(0,h.eq)(U.token,e.token))).then(e=>e[0])??null;return await p.delete(U).where((0,h.xD)((0,h.eq)(U.identifier,e.identifier),(0,h.eq)(U.token,e.token))),t}catch(e){throw Error("No verification token found.")}},e.deleteUser=async e=>{let t=await p.select().from(_).where((0,h.eq)(_.id,e)).then(e=>e[0]??null);return await p.delete(_).where((0,h.eq)(_.id,e)),t},e.unlinkAccount=async e=>{await p.delete(A).where((0,h.xD)((0,h.eq)(A.providerAccountId,e.providerAccountId),(0,h.eq)(A.provider,e.provider)))},{...e}}();var q=s(8944);let b=q.z.object({email:q.z.string().email("Email is invalid").default(""),password:q.z.string().min(6,"Password must be at least 6 characters").default("")});q.z.object({username:q.z.string().min(2,"Name is required").default(""),email:q.z.string().email("Email is invalid").default(""),password:q.z.string().min(6,"Password must be at least 6 characters").default(""),confirmPassword:q.z.string().min(6,"Passwords must match").default("")}).refine(e=>e.password===e.confirmPassword,{message:"Passwords do not match",path:["confirmPassword"]});var I=s(96330),P=s(6113),T=s(77586);class S extends n.UC{constructor(e){super(),this.code=e,this.message=e}}let E=async({email:e})=>{let t=new URL("/businessProcess/user","https://qa-apipy.safwanet.com");t.searchParams.set("email",e);let s=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Basic ${Buffer.from("banidom:pass2468").toString("base64")}`},cache:"no-cache"});if(404===s.status)return[];if(!s.ok)throw Error("Failed to get user details.");let[n]=(await s.json()).data;return n},R=async({email:e})=>{let t=new URL("/businessProcess/getProfilePicture","https://qa-apipy.safwanet.com");t.searchParams.set("email",e);let s=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Basic ${Buffer.from("banidom:pass2468").toString("base64")}`},cache:"no-cache"});if(404===s.status)return[];if(!s.ok)throw Error("Failed to get profile picture.");return(await s.json()).url},j=async({action:e,notes:t,object:s,process_state:n,sysapp:a,sysfunc:r,userid:o,json_object:i,location_url:c})=>{let l=new URL("/auditrail/businessProcess/","https://qa-apipy.safwanet.com");l.searchParams.set("action",e),l.searchParams.set("notes",t),l.searchParams.set("object",s),l.searchParams.set("process_state",n),l.searchParams.set("sysapp",a),l.searchParams.set("sysfunc",r),l.searchParams.set("userid",o),l.searchParams.set("json_object",JSON.stringify(i)),l.searchParams.set("location_url",encodeURIComponent(process.env.AUTH_URL+c));let u=await fetch(l,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Basic ${Buffer.from("banidom:"+(0,T.I)("gAAAAABmZR93XeRxSs0swoMPqvV6jOeSz-lDeZkxPhSk0lFGP4rWDqysLGbbjVmVHRXshwlwTjL6v5q9UeWlQZyba3-jNZtgBg==")).toString("base64")}`},cache:"no-cache"});return 404===u.status?[]:await u.json()},D="/api/auth",N={providers:[(0,c.Z)({credentials:{identifier:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){try{let{email:t,password:s}=await b.parseAsync(e),n=await L.getUserByEmail?.(t);if(!n)throw new S("User account does not exist");let a=(0,T.I)(n.password,process.env.FERNET_KEY);if(s!==a)throw new S("Password is not correct");return n}catch(e){if(e instanceof I.k)throw new S("System error. Please contact support");if(e instanceof q.jm)throw new S(e.errors[0].message);throw e}}})],debug:!1,pages:{signIn:"/auth/signin",error:"/"},callbacks:{async jwt(e){if("update"===e.trigger){let t=await R({email:e.token.email}),s=await E({email:e.token.email});return e.token={...e.token,image:t,name:s.name},e.token}if(e.account){let t=await R({email:e.token.email}),s=await E({email:e.token.email}),n=await L.getUserByAccount(e.account),a=n?.login_count;if("credentials"===e.account.provider){let n=new Date(Date.now()+2592e6),r=(0,P.randomUUID)(),o=await L.createSession({userId:e.user.id,sessionToken:r,expires:n});e.token.session_token=o.sessionToken,e.token.user_id=e.user.id,e.token.login_count=a,e.token.image=t,e.token.name=s.name}}return e.token},session:async e=>(e.session.user&&(e.session.user.session_token=e.token.session_token,e.session.user.user_id=e.token.user_id,e.session.user.login_count=e.token.login_count,e.session.user.image=e.token.image,e.session.user.name=e.token.name),e.session),async redirect({url:e,baseUrl:t}){if(e.startsWith("/"))return`${t}${e}`;let s=new URL(e).origin===t,n=e.includes("callbackUrl=");return s&&n?decodeURIComponent(e.split("callbackUrl=")[1]):s?e:t},authorized({auth:e,request:t}){let{nextUrl:s}=t,n=!!e?.user;s.pathname.startsWith("/api/auth");let c=a.includes(s.pathname);o.includes(s.pathname);let l=r.some(e=>s.pathname.startsWith(e));if(c)return i.NextResponse.redirect(new URL("/cycle",t.url));if(l&&!n){let e=new URL(`${D}/signin`,s.origin);return e.searchParams.append("callbackUrl",s.href),Response.redirect(e)}return!0}},events:{signIn:async e=>{await j({action:"login",location_url:"/auth/signin",object:"src/auth/index.ts",process_state:"LOGIN",sysfunc:'"signIn" func ',userid:e.user.id,sysapp:"FLOWCRAFTBUSINESSPROCESS",notes:"User logged in",json_object:{...e.user,...e.account}})},signOut:async e=>{await j({action:"logout",location_url:"/auth/signout",object:"src/auth/index.ts",process_state:"LOGOUT",sysfunc:'"signOut" func ',userid:e.token.user_id,sysapp:"FLOWCRAFTBUSINESSPROCESS",notes:"User logged out",json_object:{...e.token}}),"token"in e&&e.token?.session_token&&(await L.deleteSession?.(e.token.session_token),await L.updateAccountLoginCount?.(e.token.user_id))}},trustHost:!0,session:{strategy:"jwt"},basePath:D},{handlers:x,auth:B,signOut:O,signIn:C}=(0,n.ZP)({adapter:L,...N})},77586:(e,t,s)=>{"use strict";s.d(t,{I:()=>a});var n=s(41511);let a=(e,t)=>(t=t||process.env.FERNET_KEY,n.p.decrypt(e,t))}};